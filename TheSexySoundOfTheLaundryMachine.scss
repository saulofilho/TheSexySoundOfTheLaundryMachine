@charset "UTF-8";

$font-stack: helvetica, sans-serif;
$primary-color: black;
$second-color: white;

html, body {
    background-color: $second-color;
    margin: 0;
    height: 100%;
    width: 100%;
}
h1 {
    font: 100% $font-stack;
    color: $primary-color;
    padding: 0.5em 0 0 1em;
}
h2 {
    font: 100% $font-stack;
    color: $primary-color;
    text-align: right;
    position: relative;
    float: right;
    margin: -1.7em 1em 0 0;
}
img {
    display: block;
    height: auto;
    margin: 0 auto;
}
// @mixin aspect-ratio($arglist... /*$ratio or $width, $height*/){
//     $map : keywords($arglist);
//     $height: map-get($map, height) or nth-value($arglist, 2);
//     $width:  map-get($map, width)  or nth-value($arglist, 1);
//     $ratio:  map-get($map, ratio)  or if($width and $height, $width/$height, nth-value($arglist, 1)) or 1;
//     $padding: 1/$ratio * 100%;
//     &::before, &::after { content: ''; display: table; clear: both; width:1px; margin-left:-1px; }
//     &::before { float: left; padding-bottom: $padding; }    
// }
// // Helper function 
// // Return null rather than throwing an error if index is outside list range.    
// @function nth-value($list, $index) {
//   @return if(length($list) >= $index, nth($list, $index), null);
// } 
// .LaundryMachine {
//     @include aspect-ratio(); 
// }